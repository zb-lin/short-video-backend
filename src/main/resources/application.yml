logging:
  level:
    org.springframework.web: INFO
# 公共配置文件
spring:
  application:
    name: short-video-backend
  # 默认运行环境
  profiles:
    active: test
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    store-type: redis
    # 30 天过期
    timeout: 2592000
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${shortvideo.mysql.ip}:${shortvideo.mysql.port}/${shortvideo.mysql.db}
    username: ${shortvideo.mysql.username}
    password: ${shortvideo.mysql.password}
    hikari:
      minimum-idle: 3
      maximum-pool-size: 10
      max-lifetime: 30000   #不能小于30秒，否则默认回到1800秒
      connection-test-query: SELECT 1
  # Redis 配置
  redis:
    database: 1
    host: ${shortvideo.redis.host}
    port: ${shortvideo.redis.port}
    timeout: 5000
  # Elasticsearch 配置
  elasticsearch:
    uris: http://${shortvideo.elasticsearch.ip}:${shortvideo.elasticsearch.port}
    username: ${shortvideo.elasticsearch.username}
    password: ${shortvideo.elasticsearch.password}
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: -1
      max-request-size: -1
  rabbitmq:
    host: ${shortvideo.rabbitmq.host}
    port: ${shortvideo.rabbitmq.port}
    password: ${shortvideo.rabbitmq.password}
    username: ${shortvideo.rabbitmq.username}
server:
  address: localhost
  port: 8081
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 对象存储
cos:
  client:
    accessKey: ${cos.client.accessKey}
    secretKey: ${cos.client.secretKey}
    bucketName: ${cos.client.bucketName}
    cosHost: ${cos.client.cosHost}
rabbitmq:
  video:
    host: ${shortvideo.rabbitmq.host}
    exchangeName: ${shortvideo.rabbitmq.exchangeName}
    exchangeType: ${shortvideo.rabbitmq.exchangeType}
    queueName: ${shortvideo.rabbitmq.queueName}
    routingKey: ${shortvideo.rabbitmq.routingKey}
custom:
  elasticsearch:
    host: ${shortvideo.elasticsearch.ip}
    port: ${shortvideo.elasticsearch.port}
    username: ${shortvideo.elasticsearch.username}
    password: ${shortvideo.elasticsearch.password}
